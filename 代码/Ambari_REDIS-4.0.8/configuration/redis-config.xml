<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration supports_adding_forbidden="true">

    <property>
        <name>protected-mode</name>
        <value>yes</value>
        <display-name>protected-mode</display-name>
        <description>关闭protected-mode模式，此时外部网络可以直接访问；开启protected-mode保护模式，需配置bind ip或者设置访问密码</description>
    </property>

    <property>
        <name>tcp-backlog</name>
        <value>16</value>
        <display-name>tcp-backlog</display-name>
        <description>此参数确定了TCP连接中已完成队列(完成三次握手之后)的长度， 当然此值必须不大于Linux系统定义的/proc/sys/net/core/somaxconn值,默认为511</description>
    </property>

    <property>
        <name>timeout</name>
        <value>0</value>
        <display-name>timeout</display-name>
        <description>设置客户端连接时的超时时间，单位为秒。当客户端在这段时间内没有发出任何指令，那么关闭该连接</description>
    </property>


    <property>
        <name>tcp-keepalive</name>
        <value>300</value>
        <display-name>tcp-keepalive</display-name>
        <description>TCP连接保活策略，单位是秒。假如设置为60秒，则server端会每60秒向连接空闲的客户端发起一次ACK请求，以检查客户端是否已经挂掉，对于无响应的客户端则会关闭其连接。所以关闭一个连接最长需要120秒的时间。如果设置为0，则不会进行保活检测。</description>
    </property>

    <property>
        <name>daemonize</name>
        <value>yes</value>
        <display-name>daemonize</display-name>
        <description>默认情况下，redis不是在后台运行的，如果需要在后台运行，把该项的值更改为true。</description>
    </property>

    <property>
        <name>supervised</name>
        <value>no</value>
        <display-name>supervised</display-name>
        <description>通过upstart和systemd管理Redis守护进程。   supervised no - 没有监督互动
            supervised upstart - 通过将Redis置于SIGSTOP模式来启动信号
            supervised systemd - signal systemd将READY = 1写入$ NOTIFY_SOCKET
            supervised auto - 检测upstart或systemd方法基于 UPSTART_JOB或NOTIFY_SOCKET环境变量</description>
    </property>

    <property>
        <name>loglevel</name>
        <value>notice</value>
        <display-name>loglevel</display-name>
        <description>定义日志级别  debug（记录大量日志信息，适用于开发、测试阶段）
            verbose（较多日志信息）
            notice（适量日志信息，使用于生产环境）
            warning（仅有部分重要、关键信息才会被记录）</description>
    </property>

    <property>
        <name>databases</name>
        <value>16</value>
        <display-name>databases</display-name>
        <description>设置数据库的数目。默认的数据库是DB 0 ，可以在每个连接上使用select  dbid 命令选择一个不同的数据库，dbid是一个介于0到databases - 1 之间的数值。</description>
    </property>

    <property>
        <name>always-show-logo</name>
        <value>yes</value>
        <display-name>always-show-logo</display-name>
        <description>redis启动时是否显示Logo,yes: redis启动时显示Logo</description>
    </property>

    <property>
        <name>stop-writes-on-bgsave-error</name>
        <value>yes</value>
        <display-name>stop-writes-on-bgsave-error</display-name>
        <description>后台存储错误停止写</description>
    </property>



    <property>
        <name>rdbcompression</name>
        <value>yes</value>
        <display-name>rdbcompression</display-name>
        <description>存储至本地数据库时(持久化rdb文件)是否压缩数据</description>
    </property>


    <property>
        <name>rdbchecksum</name>
        <value>yes</value>
        <display-name>rdbchecksum</display-name>
        <description>存储至本地数据库时(持久化rdb文件)是否压缩数据</description>
    </property>

    <property>
        <name>dbfilename</name>
        <value>dump.rdb</value>
        <display-name>dbfilename</display-name>
        <description>持久化rdb存储文件名</description>
    </property>

    <property>
        <name>slave-serve-stale-data</name>
        <value>yes</value>
        <display-name>slave-serve-stale-data</display-name>
        <description>1)如果slave-serve-stale-data设置为yes，从库会继续响应客户端的请求; 2)如果slave-serve-stale-data设置为no，出去info和slaveof命令之外的任何请求都会返回一个</description>
    </property>

    <property>
        <name>slave-read-only</name>
        <value>yes</value>
        <display-name>slave-read-only</display-name>
        <description>redis2.6以后，从库默认只读</description>
    </property>

    <property>
        <name>repl-diskless-sync</name>
        <value>no</value>
        <display-name>repl-diskless-sync</display-name>
        <description>使用socket方式复制数据，目前redis复制提供disk和socket两种方式</description>
    </property>

    <property>
        <name>repl-diskless-sync-delay</name>
        <value>5</value>
        <display-name>repl-diskless-sync-delay</display-name>
        <description>当启用无硬盘备份，服务器等待一段时间后才会通过套接字向从站传送RDB文件，这个等待时间是可配置的(延迟时间以秒为单位)</description>
    </property>


    <property>
        <name>appendonly</name>
        <value>yes</value>
        <display-name>appendonly</display-name>
        <description>开启append only模式之后，redis会把所接收到的每一次写操作请求都追加到appendonly.aof文件中，当redis重新启动时，会从该文件恢复出之前的状态</description>
    </property>

    <property>
        <name>appendfsync</name>
        <value>everysec</value>
        <display-name>appendfsync</display-name>
        <description>设置对appendonly.aof文件进行同步的频率, always 表示每次有写操作都进行同步,everysec表示对写操作进行累积，每秒同步一次</description>
    </property>

    <property>
        <name>hash-max-ziplist-entries</name>
        <value>512</value>
        <display-name>hash-max-ziplist-entries</display-name>
        <description>当hash中包含超过指定元素个数并且最大的元素
            没有超过临界时，hash将以一种特殊的编码方式（大大减少内存使用）来存储，这里
            可以设置这两个临界值</description>
    </property>

    <property>
        <name>activerehashing</name>
        <value>yes</value>
        <display-name>activerehashing</display-name>
        <description>开启之后,redis将在每100毫秒时使用1毫秒的CPU时间来对redis的hash表进行重新hash,可以降低内存的使用</description>
    </property>

</configuration>